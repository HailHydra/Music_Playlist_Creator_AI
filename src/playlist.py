import requests

def create_spotify_playlist(track_ids, access_token, playlist_name="My Generated Playlist", description="Generated by Music Bot"):
    """
    Creates a playlist on Spotify and adds the given track IDs to it.

    Args:
        track_ids (list): List of Spotify track IDs to add to the playlist.
        access_token (str): The access token to authenticate with the Spotify API.
        playlist_name (str): Name of the playlist to create.
        description (str): Description of the playlist.
    
    Returns:
        str: Playlist URL if successful, error message otherwise.
    """

    # Set up headers for Spotify API requests
    headers = {
        'Authorization': f'Bearer {access_token}',
        'Content-Type': 'application/json'
    }

    # Step 1: Get the current user's Spotify user ID
    user_url = "https://api.spotify.com/v1/me"
    user_response = requests.get(user_url, headers=headers)

    if user_response.status_code == 200:
        user_id = user_response.json()["id"]
    else:
        return f"Error: Unable to fetch user information. Response: {user_response.text}"

    # Step 2: Create a new playlist
    playlist_url = f"https://api.spotify.com/v1/users/{user_id}/playlists"
    playlist_data = {
        "name": playlist_name,
        "description": description,
        "public": True  # Set to True for a public playlist
    }

    playlist_response = requests.post(playlist_url, headers=headers, json=playlist_data)

    if playlist_response.status_code == 201:
        playlist_id = playlist_response.json()["id"]
        playlist_url = playlist_response.json()["external_urls"]["spotify"]
    else:
        return f"Error: Unable to create playlist. Response: {playlist_response.text}"

    # Step 3: Add tracks to the playlist
    add_tracks_url = f"https://api.spotify.com/v1/playlists/{playlist_id}/tracks"
    track_uris = [f"spotify:track:{track_id}" for track_id in track_ids]

    add_tracks_response = requests.post(add_tracks_url, headers=headers, json={"uris": track_uris})

    if add_tracks_response.status_code == 201:
        return f"Playlist created successfully! View it here: {playlist_url}"
    else:
        return f"Error: Unable to add tracks to playlist. Response: {add_tracks_response.text}"